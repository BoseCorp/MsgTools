/*
    <OUTPUTFILENAME>
    Created <DATE> from:
        Messages = <INPUTFILENAME>
        Template = <TEMPLATEFILENAME>
        Language = <LANGUAGEFILENAME>

                     AUTOGENERATED FILE, DO NOT EDIT

*/
import 'ByteData'

class <MSGNAME>Message
{
    const MSG_ID = <MSGID>;
    const MSG_SIZE = <MSGSIZE>;
    ByteData _data;
    MessageHeader _hdr;
    <MSGNAME>Message(int size=MSG_SIZE)
    {
        _data = new ByteData(size);
        _hdr = new MessageHeader();
        _hdr.SetDataLength(size);
        _hdr.SetMessageID(MSG_ID);
        Init();
    }
    void Init()
    {
        <INIT_CODE>
    }
    <ENUMERATIONS>
    <FIELDINFOS>
    <ACCESSORS>
/*
#ifdef ENABLE_REFLECTION
    static MsgInfo* ReflectionInfo()
    {
        static bool firstTime = true;
        static MsgInfo msgInfo(MSG_ID, "<MSGNAME>", "<MSGDESCRIPTION>", MSG_SIZE);
        if(firstTime)
        {
            firstTime = false;
            msgInfo.AddField(new <REFLECTION>);
        }
        return &msgInfo;
    }
#endif
*/
};

/*
#ifdef ENABLE_REFLECTION
class <MSGNAME>MessageReflection
{
public:
    <MSGNAME>MessageReflection()
    {
        Reflection::AddMsg(<MSGNAME>Message::ReflectionInfo());
    }
};
static <MSGNAME>MessageReflection reflection_<MSGNAME>Message;
#endif
*/
