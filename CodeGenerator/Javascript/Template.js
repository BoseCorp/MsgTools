/*
    <OUTPUTFILENAME>
    Created <DATE> from:
        Messages = <INPUTFILENAME>
        Template = <TEMPLATEFILENAME>
        Language = <LANGUAGEFILENAME>

                     AUTOGENERATED FILE, DO NOT EDIT

*/
var <MSGNAME> = function(buffer) {
    // have baseclass construct the buffer?
    //Message.call(this, MSG_SIZE);
        
    if (buffer==undefined)
    {
        buffer = new ArrayBuffer(NetworkHeader.prototype.MSG_SIZE+<MSGNAME>.prototype.MSG_SIZE);
    }
    this.m_data = new DataView(buffer, NetworkHeader.prototype.MSG_SIZE);

    // need to access the message header!
    // should we use inheritance for this?
    this.hdr = new NetworkHeader(buffer);
    this.hdr.SetMessageID(<MSGNAME>.prototype.MSG_ID);
    this.hdr.SetDataLength(buffer.byteLength - NetworkHeader.prototype.MSG_SIZE);
    //this.InitializeTime();
    this.Init();
    
};

// add our class to the dictionary
MessageDictionary[<MSGID>] = <MSGNAME>

// how to make constants?
<MSGNAME>.prototype.MSG_ID = <MSGID>;
<MSGNAME>.prototype.MSG_SIZE = <MSGSIZE>;
<MSGNAME>.prototype.MSG_NAME = "<MSGNAME>";


<MSGNAME>.prototype.Init = function(){
    <INIT_CODE>
};


// http://stackoverflow.com/a/130572
<ENUMERATIONS>
<ACCESSORS>

// Convert to a javascript object
<MSGNAME>.prototype.toObject = function(){
    ret = {};
    <STRUCTUNPACKING>
    return ret;
}
